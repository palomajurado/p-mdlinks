"use strict";var _fs=_interopRequireDefault(require("fs")),_axios=_interopRequireDefault(require("axios")),_chalk=_interopRequireDefault(require("chalk")),_utils=require("./utils");function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){_defineProperty(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}var expectMDLink=/\[([^\]]*)\]\(([^)]*)\)/g,filesMDLinks=[],filesPromises=[],linksValidatePromises=[],pathsMdFiles=[],getFilesMdInDir=function(a){return _fs["default"].readdirSync((0,_utils.getPath)(a)).forEach(function(b){var c="".concat(a,"/").concat(b);(0,_utils.isDirectory)(c)&&getFilesMdInDir(c),(0,_utils.isFile)(c)&&(0,_utils.checkMD)(c)&&pathsMdFiles.push((0,_utils.getPath)(c))})},getLinksInFileMd=function(a){return new Promise(function(b,c){_fs["default"].readFile(a,"utf8",function(d,e){if(e&&Array.isArray(e.match(expectMDLink))){var f=e.match(expectMDLink).map(function(a){return a.split("](")[1].slice(0,-1)}),g=e.match(expectMDLink).map(function(a){return a.split("](")[0].slice(1)});f.forEach(function(b,c){return filesMDLinks.push({id:(0,_utils.createId)(a,c),href:b,text:g[c],file:a})}),b(filesMDLinks)}else c(d)})})},linkValidate=function(a,b){return new Promise(function(c){return(0,_axios["default"])(b).then(function(b){return c({id:a,status:b.status,statusText:b.statusText})})["catch"](function(){return c({id:a,status:404,statusText:"FAIL"})})})},dirOrFile=function(a,b){(0,_utils.isDirectory)(a)&&getFilesMdInDir(b),(0,_utils.isFile)(a)&&(0,_utils.checkMD)(a)&&pathsMdFiles.push(a),pathsMdFiles.reverse().forEach(function(a){return filesPromises.push(getLinksInFileMd(a))})},resolveValidate=function(a,b,c,d){a.forEach(function(a){var b=a.id,c=a.href;return linksValidatePromises.push(linkValidate(b,c))}),Promise.all(linksValidatePromises).then(function(c){b(a.map(function(a){return _objectSpread(_objectSpread({},a),c.find(function(b){var c=b.id;return c===a.id}))}))})["catch"](function(){return c(new Error("NOT founds links to validate ".concat(d)))})},mdLinks=function(a,b){return new Promise(function(c,d){if(a){var e=(0,_utils.getPath)(a);_fs["default"].existsSync(e)&&!!_fs["default"].lstatSync(e)?(dirOrFile(e,a),Promise.all(filesPromises).then(function(a){return a[filesPromises.length-1]}).then(function(e){Array.isArray(e)?!!b&&b.validate?resolveValidate(e,c,d,a):c(e):d(new Error("".concat(_chalk["default"].red("NOT found md files at")," ").concat(_chalk["default"].yellow(a))))})["catch"](function(){return d(new Error("".concat(_chalk["default"].red("NOT found links")," ").concat(_chalk["default"].yellow(a))))})):d(new Error(_chalk["default"].red("Path:\u26A0\uFE0F  NOT FOUND (check the NAME of DIR \\ FILE or .md)\u26A0\uFE0F  )")))}else d(new Error(_chalk["default"].yellow.bold("---> The <path> argument is required <---\n")))})};module.exports={mdLinks:mdLinks,linkValidate:linkValidate};