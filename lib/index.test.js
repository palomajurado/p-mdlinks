"use strict";var _axios=_interopRequireDefault(require("axios")),_index=_interopRequireDefault(require("./index"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}// we want a fresh start after each test
jest.mock("axios"),afterEach(function(){jest.clearAllMocks()}),it("Validates a valid link",function(){return _axios["default"].mockImplementation(function(){return Promise.resolve({data:{},status:200,statusText:"OK"})}),(0,_index["default"])("123","http://localhost:3000").then(function(a){expect(a).toEqual({id:"123",status:200,statusText:"OK"}),expect(_axios["default"]).toHaveBeenCalledTimes(1),expect(_axios["default"]).toHaveBeenCalledWith("http://localhost:3000")})}),it("validates an invalid link",function(){return _axios["default"].mockImplementation(function(){return Promise.resolve({data:{},status:404,statusText:"FAIL"})}),(0,_index["default"])("123","http://localhost:3000").then(function(a){expect(a).toEqual({id:"123",status:404,statusText:"FAIL"}),expect(_axios["default"]).toHaveBeenCalledTimes(1),expect(_axios["default"]).toHaveBeenCalledWith("http://localhost:3000")})});